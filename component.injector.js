const { root } = require('./config');
const fs = require("fs");
const vm = require("vm");
const path = require("path");

const loadPluginsJS = (root) => {
    const content = fs.readFileSync(path.join(root, 'js', 'plugins.js'), 'utf8');

    const context = {};

    vm.runInNewContext(content, context);

    return context.$plugins;
}

const patchPluginsJS = (root, plugins) => {
    const content = `// Generated by RPG Maker.
// Do not edit this file directly.
var $plugins = ${JSON.stringify(plugins, null, 4)};`;

    fs.writeFileSync(path.join(root, 'js', 'plugins.js'), content, 'utf8');
}

patchPluginsJS(root, loadPluginsJS(root).filter(x => x.name !== "ComponentLoader"));

const loader = require("./plugins/componentloader/info.json");

loader.parameters = {
    list: []
};

fs.mkdirSync(path.join(root, 'js', 'components'), {
    recursive: true
});

fs.readdirSync("./components", {
    withFileTypes: true
}).filter(x => x.isDirectory()).forEach(x => {
    if (fs.existsSync(`./components/${x.name}/index.js`)) {
        loader.parameters.list.push(`${x.name}.js`);
        fs.copyFileSync(`./components/${x.name}/index.js`, path.join(root, 'js', 'components', `${x.name}.js`));
    } else if (fs.existsSync(`./components/${x.name}/index.jsx`)) {
        loader.parameters.list.push(`${x.name}.jsx`);
        fs.copyFileSync(`./components/${x.name}/index.jsx`, path.join(root, 'js', 'components', `${x.name}.jsx`));
    }
    if (fs.existsSync(`./components/${x.name}/style.css`)) {
        loader.parameters.list.push(`${x.name}.css`);
        fs.copyFileSync(`./components/${x.name}/style.css`, path.join(root, 'js', 'components', `${x.name}.css`));
    }
});

fs.writeFileSync("./plugins/componentloader/info.json", JSON.stringify(loader, null, 4), "utf8");

require("./plugin.injector.js");